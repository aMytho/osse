# Welcome to Osse! This is the main config file. Feel free to modify anything in this file above the dotted line ---
# Lines starting with a # are comments. These are not read by Osse.


# You add the path to your music here. Osse will scan recursively, so simply enter the top level folder and all sub directories will be scanned.
# If you need more than 1 directoriy, you can add them in the below format. However, you will also need to modify the docker-compose.yml file to use the new var name.
# The first 3 have been created for you.
OSSE_MUSIC_DIR_1="/home/me/Music"
# OSSE_MUSIC_DIR_2="/mnt/usb-stick/files"
# OSSE_MUSIC_DIR_3="/my/stuff"

# Osse can run on http or https. If you intend to make osse available outside your network, you should consider HTTPS.
OSSE_PROTOCOL="http"
# OSSE_PROTOCOL="https"
# If HTTPS is used with localhost as OSSE_HOST, you must install the root certificate (root CA) in the caddy_data volume on every client.
# If you are using HTTPS with a public domain name (example.com), caddy will use a free cert from Let's Encrypt or anther service so no cert installation is required.

# The host. Most users will use localhost. If you want to access Osse from another device, use your local IP. If you want to make it public outside your network, use a domain name.
OSSE_HOST="localhost"
# OSSE_HOSTNAME="192.168.0.1"
# OSSE_HOSTNAME="mysite.com"

# Ports - IMPORTANT - The below 4 ports must be unique. Do not reuse a port number or Osse may break.
# The port Osse will be accessible from.
OSSE_SERVER_PORT="9000"
# If on HTTPS, use this one instead.
# OSSE_SERVER_PORT=443
# If you use port 80 or 443, you may need to enable listening on low port numbers.
# This may involve using sudo, modifying a docker or podman setting, or changing which ports are allowed to be listened to on the host.

# This port is used for the API
OSSE_API_PORT="9001"

# This port is used for osse-broadcast (live-events)
OSSE_BROADCAST_PORT="9003"
OSSE_BROADCAST_INTERNAL_PORT="9004"

OSSE_REDIS_PORT="9005"

# Allow new account creation. The default user "osse" is already created, so this setting will not affect it.
OSSE_ALLOW_REGISTRATION=true

# Set this to true to rerun certain 1 time operations (ecnryption key, view cache, route cache, etc.)
# You may need to set it to true if you fetch an updae. Once you rerun Osse, set it to false again.
OSSE_RUN_SETUP=false

# Modification stop --------------------------- If you made it this far, you can run Osse! DO NOT modify anything below this line unless you know what you are doing!

APP_NAME=osse
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_TIMEZONE=UTC
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=sqlite
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=laravel
# DB_USERNAME=root
# DB_PASSWORD=

SESSION_DRIVER=redis
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=.localhost

BROADCAST_CONNECTION=redis
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=redis
CACHE_PREFIX=cache_

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=valkey
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"

# Default path for docker.
OSSE_DIRECTORIES="/mnt/music"
